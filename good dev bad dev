
Good developpeur:
train everyday : for example in javascript : https://egghead.io/
when you disagree with someone, listen to him, let him show his point.
If you can not agree after few minutes, try to find someone knowledgeable to give both of you advises.
A good dev accept that its point of view might be discarded.
A good dev should accept that his former work is discarded or updated by someone else.
peer programming :
accept you might be wrong
do not judge other person work
give your point of view honnestly without judging or being mean
seek for knowledgeable people
know where/sho are the expert
people come to ask the good dev some advise
the team trust his choices
can change his mind
is patient
can deal with stress, stressful situation, stressful people
is a team player
is positive
perform unit test
give constructive feedback
update scrumboard on time
take responsability for his actions


Bad dev :
is negative
judge other dev work "this is uggly, this is bad work"
do not listen when someone is talking or explaining something
arrive late at meeting
copy/paste Code
do not understand the business value behind the software
do not listen to the user or client need
has no empathy
speaks before listening
